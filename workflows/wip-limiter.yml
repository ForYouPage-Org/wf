name: 🚦 WIP Limiter

on:
  issues:
    types: [labeled]
  pull_requests:
    types: [labeled]

jobs:
  check-wip:
    if: |
      github.event.label.name == '⏳ in-progress' || 
      github.event.label.name == '🎯 sprint-current'
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
      
    steps:
      - name: 📊 Check WIP Limits
        uses: actions/github-script@v7
        with:
          script: |
            const label = context.payload.label.name;
            const issueNumber = context.payload.issue?.number || context.payload.pull_request?.number;
            
            // Define WIP limits
            const limits = {
              '⏳ in-progress': 5,
              '🎯 sprint-current': 10
            };
            
            // Count open issues with this label
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: label,
              state: 'open'
            });
            
            const count = issues.data.length;
            const limit = limits[label];
            
            if (count > limit) {
              // Add warning comment
              const body = `⚠️ **WIP Limit Exceeded**
              
              The \`${label}\` limit of ${limit} items has been exceeded (current: ${count}).
              
              **Consider:**
              - Completing some in-progress work before starting new tasks
              - Moving lower priority items back to backlog
              - Breaking down large tasks into smaller pieces
              
              This helps maintain focus and velocity! 🎯`;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: body
              });
              
              // Add blocked label if way over limit
              if (count > limit * 1.5) {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  labels: ['🚨 blocked']
                });
              }
            }