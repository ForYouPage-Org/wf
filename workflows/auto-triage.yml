name: 🤖 Auto Triage Issues

on:
  issues:
    types: [opened, edited]

jobs:
  triage:
    name: Auto Label and Triage
    runs-on: ubuntu-latest
    permissions:
      issues: write
      
    steps:
      - name: 🏷️ Auto Label by Content
        uses: github/issue-labeler@v3.4
        with:
          github-token: ${{ github.token }}
          configuration-path: .github/labeler-config.yml
          
      - name: 🎯 Set Priority if Missing
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const labels = issue.labels.map(l => l.name);
            
            // Check if any priority label exists
            const hasPriority = labels.some(l => l.startsWith('p0-') || l.startsWith('p1-') || l.startsWith('p2-') || l.startsWith('p3-'));
            
            if (!hasPriority) {
              // Default to p2-medium if no priority set
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: ['p2-medium']
              });
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: '📌 I\'ve assigned a default priority of `p2-medium`. Please update if this needs different priority.'
              });
            }
            
      - name: 📏 Estimate Size by Keywords
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const body = (issue.body || '').toLowerCase();
            const title = issue.title.toLowerCase();
            const combined = title + ' ' + body;
            
            let size = null;
            
            // Size keywords
            if (combined.includes('typo') || combined.includes('rename') || combined.includes('quick')) {
              size = 'size:xs';
            } else if (combined.includes('small change') || combined.includes('minor')) {
              size = 'size:s';
            } else if (combined.includes('refactor') || combined.includes('implement')) {
              size = 'size:m';
            } else if (combined.includes('major') || combined.includes('redesign')) {
              size = 'size:l';
            } else if (combined.includes('epic') || combined.includes('overhaul')) {
              size = 'size:xl';
            }
            
            if (size) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: [size]
              });
            }
            
      - name: 🚦 Set Initial Status
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const labels = issue.labels.map(l => l.name);
            
            // Check if any status label exists
            const hasStatus = labels.some(l => l.startsWith('status:'));
            
            if (!hasStatus) {
              // Set to backlog by default
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: ['status:backlog']
              });
            }
            
      - name: 🧠 ADHD-Friendly Classification
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const labels = issue.labels.map(l => l.name);
            const body = (issue.body || '').toLowerCase();
            
            // Check if it's a quick win
            if (labels.includes('size:xs') || labels.includes('size:s')) {
              if (!labels.includes('focus:quick')) {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  labels: ['focus:quick']
                });
              }
            }
            
            // Check if it needs deep focus
            if (labels.includes('size:l') || labels.includes('size:xl') || 
                body.includes('complex') || body.includes('architecture')) {
              if (!labels.includes('focus:deep')) {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  labels: ['focus:deep']
                });
              }
            }